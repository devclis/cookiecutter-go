dist: bionic
language: go
go:
  - 1.13.x
  - master
  - tip
os:
  - linux
  - osx
{% if cookiecutter.project_type == 'both' -%}
env: MOD={{ cookiecutter.public_import_path }}/{{ cookiecutter.project_slug }}/cmd/{{ cookiecutter.project_slug }} BINARY={{ cookiecutter.binary_name }}
{% else -%}
env: MOD={{ cookiecutter.public_import_path }}/{{ cookiecutter.project_slug }} BINARY={{ cookiecutter.binary_name }}
{% endif %}
jobs:
  allow_failures:
    - go: tip
  fast_finish: true
  {% if cookiecutter.project_type != 'module' -%}
  include:
    - stage: deploy
      name: Publish release
      os: linux
      go: master
      before_script:
        - go get github.com/mitchellh/gox
      script:
        - gox -os="linux darwin windows" -arch="amd64" -output="build/${BINARY}-${TRAVIS_TAG}-{{.OS}}-{{.Arch}}" -ldflags "-X main.Rev=`git rev-parse --short HEAD`" -verbose ${MOD}
      deploy:
        provider: releases
        token:
          secure: REPLACE_ME
        file_glob: true
        file: build/*
        skip_cleanup: true
        on:
          repo: {{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}
          tags: true
  {% endif %}
install: true
notifications:
  email: false
before_script:
  - go get -u golang.org/x/lint/golint
  - go get github.com/fzipp/gocyclo
script:
  - pip install -U pip && pip install pre-commit && pre-commit run --all-files
  - env GO111MODULE=on go build ${MOD}
  - env GO111MODULE=on go test -v -race -coverprofile=coverage.txt -coverpkg=all -covermode=atomic ./...
after_success:
  - bash <(curl -s https://codecov.io/bash)